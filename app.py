# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1P6NrqSPSVvMg3F4NZcvOWp5n-YVM97a0
"""

!pip install pandas plotly streamlit

from google.colab import files
uploaded = files.upload()

import os
print(os.listdir())

df = load_data()

import streamlit as st
import pandas as pd
import plotly.express as px

# Load Data
@st.cache_data
def load_data():
    df = pd.read_csv("WA_Fn-UseC_-HR-Employee-Attrition.csv")
    return df

df = load_data()

# Page Setup
st.set_page_config(page_title="HR Analytics Dashboard", layout="wide")
st.title("ðŸ’¼ HR Analytics Dashboard")
st.markdown("Analyze employee attrition, satisfaction, and demographics using IBM HR data.")

# Sidebar Filters
st.sidebar.header("Filter Employees")
age = st.sidebar.slider("Age", int(df.Age.min()), int(df.Age.max()), (25, 45))
department = st.sidebar.multiselect("Department", df.Department.unique(), default=df.Department.unique())

salary = st.sidebar.multiselect(
    "Monthly Income Range",
    ["Low (<5000)", "Medium (5000-10000)", "High (>10000)"],
    default=["Low (<5000)", "Medium (5000-10000)", "High (>10000)"]
)

def categorize_income(x):
    if x < 5000:
        return "Low (<5000)"
    elif x <= 10000:
        return "Medium (5000-10000)"
    else:
        return "High (>10000)"

df["IncomeCategory"] = df["MonthlyIncome"].apply(categorize_income)
df_filtered = df[
    (df.Age >= age[0]) & (df.Age <= age[1]) &
    (df.Department.isin(department)) &
    (df["IncomeCategory"].isin(salary))
]

# KPIs
total_employees = len(df_filtered)
attrition_count = df_filtered["Attrition"].value_counts().get("Yes", 0)
attrition_rate = round((attrition_count / total_employees) * 100, 1)
avg_satisfaction = round(df_filtered["JobSatisfaction"].mean(), 2)
male_ratio = round(df_filtered["Gender"].value_counts(normalize=True).get("Male", 0) * 100, 1)

col1, col2, col3, col4 = st.columns(4)
col1.metric("Total Employees", total_employees)
col2.metric("Attrition Rate (%)", attrition_rate)
col3.metric("Avg Satisfaction", avg_satisfaction)
col4.metric("Male Ratio (%)", male_ratio)

st.markdown("---")

# Visualizations
st.subheader("ðŸ“ˆ Attrition Insights")

fig1 = px.histogram(df_filtered, x="Age", color="Attrition", nbins=20, title="Attrition by Age")
fig2 = px.bar(df_filtered, x="Department", color="Attrition", title="Attrition by Department")
fig3 = px.density_heatmap(df_filtered, x="JobRole", y="MonthlyIncome", color_continuous_scale="Viridis",
                          title="Attrition Heatmap (Income vs Role)")

st.plotly_chart(fig1, use_container_width=True)
st.plotly_chart(fig2, use_container_width=True)
st.plotly_chart(fig3, use_container_width=True)

pip install streamlit pandas plotly

streamlit run app.py